{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "New Real-Partner Account: Default Landing Company (request)",
    "description": "This call opens a new Real-Partner Account",
    "type": "object",
    "auth_required": 1,
    "auth_scopes": [
        "admin"
    ],
    "additionalProperties": false,
    "required": [
        "new_partner_account",
        "partner_type",
        "website"
    ],
    "properties": {
        "new_partner_account": {
            "description": "Must be `1`",
            "type": "integer",
            "enum": [
                1
            ]
        },
        "account_turnover": {
            "description": "[Optional] The anticipated account turnover.",
            "type": "string",
            "enum": [
                "Less than $25,000",
                "$25,000 - $50,000",
                "$50,001 - $100,000",
                "$100,001 - $500,000",
                "Over $500,000"
            ]
        },
        "address_city": {
            "description": "[Optional] Within 100 characters.",
            "type": "string",
            "pattern": "^\\p{L}[\\p{L}\\s'.-]{0,99}$"
        },
        "address_line_1": {
            "description": "Within 70 characters, with no leading whitespaces and may contain letters/numbers and/or any of following characters '.,:;()@#/-",
            "type": "string",
            "pattern": "^[\\p{L}\\p{Nd}'.,:;()\\x{b0}@#/-][\\p{L}\\p{Nd}\\s'’.,:;()\\x{b0}@#/-]{0,69}$"
        },
        "address_line_2": {
            "description": "[Optional] Within 70 characters.",
            "type": "string",
            "pattern": "^[\\p{L}\\p{Nd}\\s'’.,:;()\\x{b0}@#/-]{0,70}$"
        },
        "address_postcode": {
            "description": "[Optional] Within 20 characters and may not contain '+'.",
            "type": "string",
            "pattern": "^([A-Za-z0-9][A-Za-z0-9\\s-]{0,20})?$"
        },
        "address_state": {
            "description": "[Optional] Possible value receive from `states_list` call.",
            "type": "string",
            "pattern": "^[\\p{L}\\p{Nd}\\s'.,-]{0,100}$"
        },
        "calling_country_code": {
            "description": "[Optional] The phone's calling country code. Don't include the `+` sign. Up to 4 digits.",
            "type": [
                "null",
                "string"
            ],
            "pattern": "^\\d{1,4}$",
            "sensitive": 1
        },
        "citizen": {
            "description": "[Optional] Country of legal citizenship, 2-letter country code.",
            "type": [
                "null",
                "string"
            ],
            "pattern": "^([a-z]{2})?$"
        },
        "client_type": {
            "description": "[Optional] Indicates whether this is for a client requesting an account with professional status.",
            "type": "string",
            "default": "retail",
            "enum": [
                "professional",
                "retail"
            ]
        },
        "company_name": {
            "description": "[Optional] Company name. Only applicable for partners of type company.",
            "type": "string",
            "pattern": "^(?!.*\\s{2,})[\\p{L}\\s'.-]{2,50}$",
            "sensitive": 1
        },
        "company_registration_no": {
            "description": "[Optional] Company registration number. Only applicable for partners of type company.",
            "type": "string",
            "pattern": "^(?!^$|\\s+)[A-Za-z0-9.\\/\\s-]{0,25}$"
        },
        "currency": {
            "description": "[Optional] To set currency of the account. List of supported currencies can be acquired with `payout_currencies` call.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{2,20}$"
        },
        "date_of_birth": {
            "description": "Date of birth format: `yyyy-mm-dd`.",
            "type": "string",
            "pattern": "^[0-9]{4}-[0-9]{1,2}-[0-9]{1,2}$"
        },
        "fatca_declaration": {
            "description": "[Optional] Indicates client's self-declaration of FATCA.",
            "type": "integer",
            "enum": [
                0,
                1
            ]
        },
        "first_name": {
            "description": "Within 1-50 characters, use only letters, spaces, hyphens, full-stops or apostrophes.",
            "type": "string",
            "pattern": "^(?!.*\\s{2,})[\\p{L}\\s'.-]{1,50}$",
            "sensitive": 1
        },
        "landing_company_short": {
            "description": "[Optional] If specified, will return only the underlyings for the specified landing company.",
            "type": "string",
            "enum": [
                "maltainvest",
                "svg"
            ]
        },
        "last_name": {
            "description": "Within 1-50 characters, use only letters, spaces, hyphens, full-stops or apostrophes.",
            "type": "string",
            "pattern": "^(?!.*\\s{2,})[\\p{L}\\s'.-]{1,50}$",
            "sensitive": 1
        },
        "non_pep_declaration": {
            "description": "[Optional] Indicates client's self-declaration of not being a PEP/RCA (Politically Exposed Person/Relatives and Close Associates).",
            "type": "integer",
            "maximum": 1,
            "minimum": 0
        },
        "partner_type": {
            "description": "Defines whether this partner is an individual or a company. Only applicable for partners",
            "type": "string",
            "enum": [
                "individual",
                "company"
            ]
        },
        "phone": {
            "description": "[Optional] The phone's national format in 8-35 digits, don't include the `+` sign nor the calling country code.",
            "type": [
                "null",
                "string"
            ],
            "pattern": "^(\\+)?([-\\s]*\\d){8,35}$",
            "sensitive": 1
        },
        "provider": {
            "description": "[Optional] Name  of the provider platform.",
            "type": "string",
            "enum": [
                "myaffiliate",
                "dynamicworks"
            ]
        },
        "residence": {
            "description": "2-letter country code, possible value receive from `residence_list` call.",
            "type": "string",
            "pattern": "^[a-z]{2}$"
        },
        "salutation": {
            "description": "[Optional] Accept any value in enum list.",
            "type": "string",
            "enum": [
                "Mr",
                "Ms",
                "Miss",
                "Mrs"
            ]
        },
        "secret_answer": {
            "description": "[Optional] Answer to secret question, within 4-50 characters. Required for new account and existing client details will be used if client open another account.",
            "type": "string",
            "pattern": "^[\\w\\-\\,\\.\\' ]+",
            "maxLength": 50,
            "minLength": 4,
            "sensitive": 1
        },
        "secret_question": {
            "description": "[Optional] Accept any value in enum list. Required for new account and existing client details will be used if client open another account.",
            "type": "string",
            "enum": [
                "Mother's maiden name",
                "Name of your pet",
                "Name of first love",
                "Memorable town/city",
                "Memorable date",
                "Favourite dish",
                "Brand of first car",
                "Favourite artist"
            ]
        },
        "website": {
            "description": "Partner's Website URI/Promotional Platform",
            "type": "string",
            "pattern": "^[\\w_@./:#&+-]*$"
        },
        "loginid": {
            "description": "[Optional] The login id of the user. If left unspecified, it defaults to the initial authorized token's login id.",
            "type": "string",
            "pattern": "^[A-Za-z]+[0-9]+$"
        },
        "passthrough": {
            "description": "[Optional] Used to pass data through the websocket, which may be retrieved via the `echo_req` output field.",
            "type": "object"
        },
        "req_id": {
            "description": "[Optional] Used to map request to response.",
            "type": "integer"
        }
    }
}
