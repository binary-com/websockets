version: 2.1
orbs:
  k8s: circleci/kubernetes@0.7.0
  slack: circleci/slack@3.4.2
commands:
  bundle_install:
    description: "Bundle install"
    steps:
      - restore_cache:
          name: Bundle modules cache restore
          keys:
            - bundle-v1-{{ checksum "Gemfile" }}
            - bundle-v1-
      - run:
          name: Bundle install
          command: |
            bundle install --path ./modules
      - save_cache:
          name: Bundle modules cache save
          key: bundle-v1-{{ checksum "Gemfile" }}
          paths:
            - "modules"
  build:
    description: "Build Jekyll site"
    steps:
      - restore_cache:
          name: "Build cache restore"
          keys:
            - _site-v1-{{ .Revision }}
            - _site-v1-
      - run:
          name: Building Jekyll site
          command: bundle exec jekyll build --incremental
      - save_cache:
          name: Build cache save
          key: _site-v1-{{ .Revision }}
          paths:
            - _site
  deploy:
    description: "Deploy to static branches"
    parameters:
      target_branch:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: _site
      - run:
          name: Tag build
          command: echo "<< parameters.target_branch >> $(date -u +'%Y-%m-%dT%H:%M:%SZ')" > _site/version
      - run:
          name: Install and configure dependencies
          command: |
            curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
            sudo apt install nodejs
            sudo npm install gh-pages@2.0.1
            git config user.email "ci-build@binary.com"
            git config user.name "ci-build"
      - add_ssh_keys:
          fingerprints:
            - "01:67:4a:6d:26:9c:70:c4:1a:60:91:88:d9:dd:f0:83"
      - run:
          name: Deploy docs to gh-pages branch
          command: node ./node_modules/gh-pages/bin/gh-pages -d _site --branch << parameters.target_branch >> --message '[skip ci]'
  docker_build_push:
    description: "Build Docker image"
    steps:
      - setup_remote_docker
      - run: 
          name: Building docker image
          command: |
            docker build -t ${DOCKHUB_ORGANISATION}/binary-static-developers:${CIRCLE_SHA1} -t ${DOCKHUB_ORGANISATION}/binary-static-developers:latest .
      - run: 
          name: Pushing Image to docker hub
          command: |
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push ${DOCKHUB_ORGANISATION}/binary-static-developers:${CIRCLE_SHA1}
            docker push ${DOCKHUB_ORGANISATION}/binary-static-developers:latest
  k8s_deploy:
    description: "Deploy to k8s cluster"
    parameters:
      k8s_namespace:
        type: string
        default: "developers-binary-com-production"
    steps:
      - k8s/install-kubectl
      - run: 
          name: Deploying to k8s cluster for service binary-developers
          command: |
            export NAMESPACE=<< parameters.k8s_namespace >>
            git clone https://github.com/binary-com/devops-ci-scripts
            cd devops-ci-scripts/k8s-build_tools
            echo $CA_CRT | base64 --decode > ca.crt
            ./release.sh binary-static-developers ${CIRCLE_SHA1}

  notify_slack:
    description: "Notify slack"
    steps:
      - slack/status:
          include_project_field: false
          failure_message: "Release failed for developers.binary.com with version *$(cat _site/version)*"
          success_message: "Release succeeded for developers.binary.com with version *$(cat _site/version)*"
          webhook: ${SLACK_WEBHOOK}
          
  publish_to_pages_staging:
    description: "Publish to cloudflare pages"
    steps:
      - run:
          name: "Publish to cloudflare pages (staging)"
          command: |
            cd _site
            npx wrangler pages publish . --project-name=websockets-pages --branch=staging
            echo "New staging website - http://staging.cf-pages-websockets.binary.com"
            
  publish_to_pages_production:
    description: "Publish to cloudflare pages"
    steps:
      - run:
          name: "Publish to cloudflare pages (production)"
          command: |
            cd _site
            npx wrangler pages publish . --project-name=websockets-pages --branch=main
            echo "New website - http://cf-pages-websockets.binary.com"
            
jobs:
  build:
    docker:
      - image: circleci/ruby:2.7-buster
    steps:
      - checkout
      - bundle_install
      - build
  release_staging:
    docker:
      - image: circleci/ruby:2.7-buster
    steps:
      - checkout
      - bundle_install
      - build
      - persist_to_workspace:
          root: _site
          paths:
            - .
  release_production:
    docker:
      - image: circleci/ruby:2.7-buster
    steps:
      - checkout
      - bundle_install
      - build
      - persist_to_workspace:
          root: _site
          paths:
            - .
      - deploy:
          target_branch: "production"
      - notify_slack
  release_aws_production:
    docker:
      - image: circleci/ruby:2.7-buster
    steps:
      - checkout
      - bundle_install
      - build
      - docker_build_push
      - k8s_deploy
  
  publish_cloudflare_staging:
    docker:
      - image: cimg/node:18.4.0
    steps:
      - attach_workspace:
          at: _site
      - publish_to_pages_staging

  publish_cloudflare_production:
    docker:
      - image: cimg/node:18.4.0
    steps:
      - attach_workspace:
          at: _site
      - publish_to_pages_production
      
workflows:
  build:
    jobs:
      - build:
          filters:
            branches:
              ignore: /^gh-pages$/
  release:
    jobs:
      - release_staging:
          filters:
            branches:
              only: /^gh-pages$/
      - release_production:
          filters:
            branches:
              only: /^gh-pages$/
          context: binary-frontend-artifact-upload
      - release_aws_production:
          filters:
            branches:
              only: /^gh-pages$/
          context: binary-frontend-artifact-upload
      - publish_cloudflare_staging:
          requires:
            - release_staging
          filters:
            branches:
              only: /^gh-pages$/
          context: binary-frontend-artifact-upload
      - publish_cloudflare_production:
          requires:
            - release_production
          filters:
            branches:
              only: /^gh-pages$/
          context: binary-frontend-artifact-upload

          
